@page "/account"
@using BankManagementSystemUI.Data
@using System.ComponentModel.DataAnnotations
@using BankManagementSystemUI.Services
@using System.Linq
@inject ISignalRWrapper SignalRWrapper;
@inject INetworkServerProvider NetworkServerProvider
@inject IAccountManagerClient AccountManagerClient;

<PageTitle>Account</PageTitle>

<h1>Account</h1>

<input type="text" class="txt-primary" @bind="_customerRegistrationInfo.FirstName" placeholder="First Name" />
<input type="text" class="txt-primary" @bind="_customerRegistrationInfo.LastName" placeholder="Last Name" />
<input type="text" class="txt-primary" @bind="_customerRegistrationInfo.Email" placeholder="Email" />
<input type="text" class="txt-primary" @bind="_customerRegistrationInfo.PhoneNumber" placeholder="Phone Number" />
<input type="text" class="txt-primary" @bind="_customerRegistrationInfo.Address" placeholder="Address" />
<input type="text" class="txt-primary" @bind="_customerRegistrationInfo.City" placeholder="City" />
<input type="text" class="txt-primary" @bind="_customerRegistrationInfo.State" placeholder="State" />
<input type="text" class="txt-primary" @bind="_customerRegistrationInfo.ZipCode" placeholder="Zip Code" />

<button class="btn btn-primary" @onclick="CreateAccount">Create Account</button>

@*Display the current customer info*@
@if (!string.IsNullOrEmpty(_customerInfo.Email))
{
    <h2>Customer Info</h2>
    <table class="table">
        <tr>
            <th>Account Id</th>
            <th>Name</th>
            <th>Email</th>
            <th>Phone Number</th>
            <th>Address</th>
        </tr>
        <tr>
            <td>@_customerInfo.AccountId</td>
            <td>@_customerInfo.FullName</td>
            <td>@_customerInfo.Email</td>
            <td>@_customerInfo.PhoneNumber</td>
            <td>@_customerInfo.FullAddress</td>
        </tr>
    </table>
}


@code {
    private readonly CustomerInfo _customerInfo = new CustomerInfo();
    private CustomerRegistrationInfo _customerRegistrationInfo = new CustomerRegistrationInfo();
    //private async Task GetAccountAsync()
    //{
    //    if (string.IsNullOrEmpty(_customerRegistrationInfo.Email))
    //    {
    //        return;
    //    }
        
    //    var accountIdInfo = await AccountManagerClient.GetAccountIdAsync(_customerRegistrationInfo.Email);
    //    if (accountIdInfo?.AccountIds == null || !accountIdInfo.AccountIds.Any())
    //    {
    //        return;
    //    }
    //    _customerInfo = await AccountManagerClient.GetCustomerInfoAsync(accountIdInfo.AccountIds.First());
      
    //}

    private void CreateAccount()
    {
        SignalRWrapper.OnSignalREvent += 
        //register signalr
        
        //send create user
        
        //update the below on signalr event
        _customerInfo.FullAddress = $"{_customerRegistrationInfo.Address} {_customerRegistrationInfo.City} {_customerRegistrationInfo.State} {_customerRegistrationInfo.ZipCode}";
        _customerInfo.Email = _customerRegistrationInfo.Email;
        _customerInfo.FullName = $"{_customerRegistrationInfo.FirstName} {_customerRegistrationInfo.LastName}";
        _customerInfo.PhoneNumber = _customerRegistrationInfo.PhoneNumber;
        _customerInfo.AccountId = Guid.NewGuid().ToString();
    }
}
