@page "/transactions"
@using BankManagementSystemUI.Data


<PageTitle>Transactions</PageTitle>

<h1>Transactions</h1>

<p role="status">Current balance: @_currentBalance</p>

<input type="text" class="txt-primary" @bind="_amount" placeholder="Amount" />

<button class="btn btn-primary" @onclick="Deposit">Deposit</button>
<button class="btn btn-primary" @onclick="Withdraw">Withdraw</button>

<div>
    <p><button class="btn btn-primary" @onclick="GetTransactions">Get Transaction History</button></p>
    @if (_transactions == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Account Id</th>
                    <th>Amount</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in _transactions)
                {
                    <tr>
                        <td>@transaction.TransactionTime.ToLocalTime()</td>
                        <td>@transaction.AccountId</td>
                        <td>@transaction.TransactionAmount</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private decimal _currentBalance = 0;
    private decimal _amount = 0;
    private CustomerInfo _customerInfo = new CustomerInfo();
    private IList<AccountTransactionResponse>? _transactions;

    private void Deposit()
    {
        _currentBalance += _amount;
    }

    private void Withdraw()
    {
        _currentBalance -= _amount;
    }

    private void GetTransactions()
    {
        _transactions = new List<AccountTransactionResponse>();
        _transactions.Add(new AccountTransactionResponse() { AccountId = Guid.NewGuid().ToString(), TransactionAmount = 100, TransactionTime = DateTimeOffset.UtcNow });
        _transactions.Add(new AccountTransactionResponse() { AccountId = Guid.NewGuid().ToString(), TransactionAmount = -200, TransactionTime = DateTimeOffset.UtcNow });
    }
}
